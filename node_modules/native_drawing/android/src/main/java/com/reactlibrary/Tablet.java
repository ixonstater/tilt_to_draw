package com.reactlibrary;

import android.view.SurfaceView;
import android.view.SurfaceHolder;
import android.util.DisplayMetrics;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Color;
import android.graphics.Path;
import android.content.Context;
import android.content.pm.ActivityInfo;
import android.app.Activity;
import android.content.ContextWrapper;
import react.debuglogmanager.Logger;

public class Tablet extends SurfaceView{
  private SurfaceHolder holder;
  private Paint linePaint;
  private Paint circlePaint;
  private Path path;
  private Context ctx;
  private Boolean ready = false;
  private Boolean canvasReady = true;

  public Tablet(Context context){
    super(context);
    this.ctx = context;
    this.linePaint = new Paint(Paint.ANTI_ALIAS_FLAG);
    this.linePaint.setColor(Color.RED);
    this.linePaint.setStyle(Paint.Style.STROKE);
    this.linePaint.setStrokeWidth(20);
    this.circlePaint = new Paint(Paint.ANTI_ALIAS_FLAG);
    this.circlePaint.setColor(Color.WHITE);
    this.holder = getHolder();
    this.path = new Path();
  }

  public void draw(float x, float y){
    Canvas canvas = this.holder.lockCanvas();
    this.setCanvasReady(false);
    this.path.lineTo(x, y);
    if(canvas != null){
      canvas.drawColor(Color.BLACK);
      canvas.drawPath(this.path, this.linePaint);
      canvas.drawCircle(x, y, 20, this.circlePaint);
      this.holder.unlockCanvasAndPost(canvas);
    }
    this.setCanvasReady(true);
  }

  public void setStartingCoords(float x, float y){
    this.path.moveTo(x, y);
  }

  public void setReady(Boolean val){
    this.ready = val;
  }

  public Boolean isReady(){
    return this.ready;
  }

  public Boolean isCanvasReady(){
    return this.canvasReady;
  }

  public void setCanvasReady(Boolean val){
    this.canvasReady = val;
  }

  @Override
  protected void onAttachedToWindow(){
    super.onAttachedToWindow();
    Activity tempRef = (Activity)(((ContextWrapper)this.ctx).getBaseContext());
    tempRef.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
    this.setSystemUiVisibility(this.SYSTEM_UI_FLAG_IMMERSIVE | this.SYSTEM_UI_FLAG_HIDE_NAVIGATION | this.SYSTEM_UI_FLAG_FULLSCREEN);
  }

  @Override
  protected void onDetachedFromWindow(){
    super.onDetachedFromWindow();
    Activity tempRef = (Activity)(((ContextWrapper)this.ctx).getBaseContext());
    tempRef.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
  }
}